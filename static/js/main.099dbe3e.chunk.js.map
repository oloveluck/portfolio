{"version":3,"sources":["components/Footer.js","pages/HomePage.js","pages/ContactPage.js","pages/AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Container","fluid","Row","Col","md","sm","HomePage","props","ContactPage","AboutPage","App","state","title","headerLinks","path","home","subTitle","text","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","to","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gUAuBeA,MAlBf,WAEI,OACI,4BAAQC,UAAU,QACd,kBAACC,EAAA,EAAD,CAAWC,OAAO,GACd,kBAACC,EAAA,EAAD,CAAKH,UAAU,0CACX,kBAACI,EAAA,EAAD,CAAKJ,UAAU,MAAMK,GAAI,EAAGC,GAAI,IAAhC,iBAGA,kBAACF,EAAA,EAAD,CAAKJ,UAAU,iCAAiCK,GAAI,GAApD,2CCNLE,MANf,SAAkBC,GACd,OACI,+CCIOC,MANf,SAAqBD,GACjB,OACI,kDCIOE,MANf,SAAmBF,GACf,OACI,gDCoEOG,G,wDAzDb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXC,MAAO,gBACPC,YAAa,CACX,CAAED,MAAO,OAAQE,KAAM,KACvB,CAAEF,MAAO,QAASE,KAAM,UACxB,CAAEF,MAAO,UAAWE,KAAM,aAE5BC,KAAO,CACLH,MAAQ,WACRI,SAAW,4BACXC,KAAO,yBAETC,MAAQ,CACNN,MAAQ,QACRI,SAAW,uBACXC,KAAO,yBAETE,QAAU,CACRP,MAAQ,0BACRI,SAAW,uBACXC,KAAO,0BAtBM,E,qDA4BT,IAAD,OACP,OACE,kBAAC,IAAD,KACE,kBAACjB,EAAA,EAAD,CAAWD,UAAU,MAAME,OAAQ,GACnC,kBAACmB,EAAA,EAAD,CAAQrB,UAAU,gBAAgBsB,GAAG,cAAcC,OAAO,MACtD,kBAACF,EAAA,EAAOG,MAAR,sBAEA,kBAACH,EAAA,EAAOI,OAAR,CAAezB,UAAU,WAAW0B,gBAAc,kBAClD,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,iBAClB,kBAACC,EAAA,EAAD,CAAK7B,UAAU,WACb,kBAAC,IAAD,CAAMA,UAAU,WAAW8B,GAAG,KAA9B,QACA,kBAAC,IAAD,CAAM9B,UAAU,WAAW8B,GAAG,UAA9B,SACA,kBAAC,IAAD,CAAM9B,UAAU,WAAW8B,GAAG,YAA9B,cAMN,kBAAC,IAAD,CAAOf,KAAK,IAAIgB,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAUnB,MAAO,EAAKD,MAAMI,KAAKH,MAAOI,SAAU,EAAKL,MAAMI,KAAKC,SAAUC,KAAM,EAAKN,MAAMI,KAAKE,UACtI,kBAAC,IAAD,CAAOH,KAAK,SAASgB,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAWnB,MAAO,EAAKD,MAAMI,KAAKH,MAAOI,SAAU,EAAKL,MAAMI,KAAKC,SAAUC,KAAM,EAAKN,MAAMI,KAAKE,UAC5I,kBAAC,IAAD,CAAOH,KAAK,WAAWgB,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAanB,MAAO,EAAKD,MAAMI,KAAKH,MAAOI,SAAU,EAAKL,MAAMI,KAAKC,SAAUC,KAAM,EAAKN,MAAMI,KAAKE,UAChJ,kBAAC,EAAD,Y,GAnDQe,IAAMC,YCDJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASR,OACP,kBAAC,IAAMS,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.099dbe3e.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction Footer() {\n\n    return (\n        <footer className=\"mt-5\">\n            <Container fluid={true}>\n                <Row className=\"border-top justify-content-between p-3\">\n                    <Col className=\"p-0\" md={3} sm={12}>\n                        Owen Loveluck\n                    </Col>\n                    <Col className=\"p-0 d-flex justify-content-end\" md={3}>\n                        This site was made by Owen Loveluck\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction HomePage(props) {\n    return (\n        <p>HomePage works!</p>\n    )\n}\n\nexport default HomePage;","import React from 'react';\n\nfunction ContactPage(props) {\n    return (\n        <p>ContactPage works!</p>\n    )\n}\n\nexport default ContactPage;","import React from 'react';\n\nfunction AboutPage(props) {\n    return (\n        <p>AboutPage works!</p>\n    )\n}\n\nexport default AboutPage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport ContactPage from './pages/ContactPage';\nimport AboutPage from './pages/AboutPage';\n\nimport './App.css';\n\nclass App extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'Owen Loveluck',\n      headerLinks: [\n        { title: 'Home', path: '/' },\n        { title: 'About', path: '/about'},\n        { title: 'Contact', path: '/contact'}\n      ],\n      home : {\n        title : 'Homepage',\n        subTitle : 'this is my portfolio home',\n        text : 'information goes here'\n      },\n      about : {\n        title : 'About',\n        subTitle : 'this is my portfolio',\n        text : 'information goes here'\n      },\n      contact : {\n        title : 'This is my contact info',\n        subTitle : 'this is my portfolio',\n        text : 'information goes here'\n      },\n    }\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <Container className=\"p-0\" fluid ={true}>\n        <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand>Owen Loveluck</Navbar.Brand>\n\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar-toggle\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <Route path=\"/\" exact render={() => <HomePage title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text}/>} />\n          <Route path=\"/about\" exact render={() => <AboutPage title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text}/>} />\n          <Route path=\"/contact\" exact render={() => <ContactPage title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text}/>} />\n          <Footer />\n        </Container>\n      </Router>\n    )\n    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}